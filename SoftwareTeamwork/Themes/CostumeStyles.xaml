<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:SoftwareTeamwork">

  <!--Thickness-->
  <sys:Double x:Key="NotifyContextmenuTextSize">13</sys:Double>
  <sys:Double x:Key="NotifyContextmenuIconSize">14</sys:Double>
  <sys:Double x:Key="NotifyContextmenuItemHeight">26</sys:Double>

  <!--Seperator-->

  <!--ContentMenuSeperator-->
  <Style x:Key="SeparatorStyle1"
         TargetType="{x:Type Separator}">
    <Setter Property="Margin"
            Value="0,2,0,2" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  Height="1"
                  SnapsToDevicePixels="true" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--TextBlock-->

  <!--AccountLabel-->
  <Style x:Key="AccountLabel"
         TargetType="TextBlock">
    <Setter Property="FontSize"
            Value="12" />
    <Setter Property="Foreground"
            Value="{DynamicResource GridLineFloderButtonColor}" />
    <Setter Property="Padding"
            Value="4,2,4,2" />
    <Setter Property="VerticalAlignment"
            Value="Bottom" />
    <Setter Property="TextAlignment"
            Value="Justify" />
  </Style>

  <!--IconTextBlock-->
  <Style x:Key="IconTextBlock"
         TargetType="TextBlock">
    <Setter Property="FontFamily"
            Value="{DynamicResource Segoe}" />
    <Setter Property="Foreground"
            Value="{DynamicResource MainTextColor}" />
    <Setter Property="TextAlignment"
            Value="Center" />
    <Setter Property="HorizontalAlignment"
            Value="Center" />
    <Setter Property="VerticalAlignment"
            Value="Center" />
  </Style>

  <!--NumberTextBlock-->
  <Style x:Key="NumberTextBlock"
         TargetType="TextBlock">
    <Setter Property="FontWeight"
            Value="ExtraBold" />
    <Setter Property="UseLayoutRounding"
            Value="True" />
    <Setter Property="FontSize"
            Value="10.8" />
    <Setter Property="Foreground"
            Value="{DynamicResource MainTextColor}" />
    <Setter Property="TextAlignment"
            Value="Center" />
    <Setter Property="HorizontalAlignment"
            Value="Center" />
    <Setter Property="VerticalAlignment"
            Value="Center" />
  </Style>

  <!--FlowAnaTick-->
  <Style x:Key="FluxAnaTickV"
         TargetType="{x:Type TextBlock}">
    <Setter Property="TextAlignment"
            Value="Right" />
    <Setter Property="VerticalAlignment"
            Value="Top" />
    <Setter Property="HorizontalAlignment"
            Value="Left" />
    <Setter Property="Width"
            Value="20" />
    <Setter Property="FontSize"
            Value="8" />
    <Setter Property="FontWeight"
            Value="Light" />
    <Setter Property="Foreground"
            Value="{DynamicResource FluxPopupAnaCanvas_Tick}" />
  </Style>

  <Style x:Key="FluxAnaTickH"
         TargetType="{x:Type TextBlock}">
    <Setter Property="TextAlignment"
            Value="Center" />
    <Setter Property="HorizontalAlignment"
            Value="Left" />
    <Setter Property="VerticalAlignment"
            Value="Center" />
    <Setter Property="Padding"
            Value="0" />
    <Setter Property="Width"
            Value="20" />
    <Setter Property="FontSize"
            Value="8" />
    <Setter Property="FontWeight"
            Value="Light" />
    <Setter Property="Foreground"
            Value="{DynamicResource FluxPopupAnaCanvas_Tick}" />
  </Style>

  <!--ToolTip-->

  <!--FlowAnaNodeTip-->
  <Style x:Key="FlowAnaNodeTip"
         TargetType="TextBlock">
    <Setter Property="FontSize"
            Value="10" />
    <Setter Property="Foreground"
            Value="White" />
    <Setter Property="FontWeight"
            Value="Thin" />
    <Setter Property="Margin"
            Value="5,2,5,2" />
  </Style>

  <!--NodeToolTip-->
  <Style x:Key="NodeToolTip"
         TargetType="ToolTip">
    <Setter Property="Padding"
            Value="0" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource BorderBrush}" />
    <Setter Property="BorderThickness"
            Value="1" />
  </Style>

  <!--IconToggelButtonTooltip-->
  <Style x:Key="IconToggelButtonToolTip"
         TargetType="ToolTip">
    <Setter Property="Padding"
            Value="0" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource BorderBrush}" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="DataContext"
            Value="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=Self}}" />
  </Style>

  <!--Buttons-->

  <!--TextBox-->

  <!--AccountTextBox-->
  <Style x:Key="AccountTextBox"
         TargetType="TextBox">
    <Setter Property="TextWrapping"
            Value="Wrap" />
    <Setter Property="Height"
            Value="20" />
    <Setter Property="MinWidth"
            Value="120" />
    <Setter Property="MaxWidth"
            Value="320" />
    <Setter Property="HorizontalAlignment"
            Value="Stretch" />
    <Setter Property="Background"
            Value="{DynamicResource AccountPage_TextBox_Background}" />
    <Setter Property="Foreground"
            Value="{DynamicResource AccountPage_TextBox_Foreground}" />
    <Setter Property="BorderThickness"
            Value="0" />
    <Setter Property="Margin"
            Value="10,0,0,0" />
    <Setter Property="CaretBrush"
            Value="{DynamicResource AccountPage_TextBox_Foreground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border x:Name="border"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid Background="{TemplateBinding Background}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ScrollViewer x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"
                            Margin="0,3,0,0" />
              <Rectangle x:Name="EnableId" Grid.Row="1"
                         Fill="{DynamicResource AccountPage_TextBox_UnderlineBrush}"
                         Height="1"
                         SnapsToDevicePixels="True"
                         HorizontalAlignment="Stretch" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
              <Setter TargetName="EnableId"
                      Property="Visibility"
                      Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="True">
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--ErrorPopupContent-->
  <Style x:Key="ErrorPopupContent"
         TargetType="TextBox">
    <Setter Property="Foreground"
            Value="{DynamicResource DefaultPopupForeground}" />
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="BorderThickness"
            Value="0" />
    <Setter Property="FontSize"
            Value="9" />
    <Setter Property="FontWeight"
            Value="Light" />
    <Setter Property="CaretBrush"
            Value="{DynamicResource AccountPage_TextBox_Foreground}" />
    <Setter Property="TextWrapping"
            Value="Wrap" />
    <Setter Property="IsReadOnly"
            Value="True" />
    <Setter Property="VerticalScrollBarVisibility"
            Value="Auto" />
    <Setter Property="VerticalAlignment"
            Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border x:Name="border"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid Background="{TemplateBinding Background}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ScrollViewer x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"
                            Style="{DynamicResource SC_ScrollViewer}"
                            Margin="0,0,0,0" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--AccountPasswordBox-->
  <Style x:Key="AccountPasswordBox"
         TargetType="{x:Type PasswordBox}">
    <Setter Property="Height"
            Value="20" />
    <Setter Property="MinWidth"
            Value="120" />
    <Setter Property="MaxWidth"
            Value="320" />
    <Setter Property="HorizontalAlignment"
            Value="Stretch" />
    <Setter Property="Background"
            Value="{DynamicResource AccountPage_TextBox_Background}" />
    <Setter Property="Foreground"
            Value="{DynamicResource AccountPage_TextBox_Foreground}" />
    <Setter Property="BorderThickness"
            Value="0" />
    <Setter Property="CaretBrush"
            Value="{DynamicResource AccountPage_TextBox_Foreground}" />
    <Setter Property="Margin"
            Value="10,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <Border x:Name="border"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid Background="{TemplateBinding Background}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ScrollViewer x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"
                            Margin="0,2,0,0" />
              <Rectangle x:Name="EnableID" Grid.Row="1"
                         Fill="{DynamicResource AccountPage_TextBox_UnderlineBrush}"
                         Height="1"
                         SnapsToDevicePixels="True"
                         HorizontalAlignment="Stretch" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
              <Setter TargetName="EnableID"
                      Property="Visibility"
                      Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="True">
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--ScrollView-->
  <Style x:Key="SC_Thumb"
         TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle"
            Value="True" />
    <Setter Property="IsTabStop"
            Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle x:Name="THB"
                     Fill="{DynamicResource DefaultScrollThumb_Background_N}" />
          <ControlTemplate.Triggers>
            <Trigger Property="IsDragging"
                     Value="true">
              <Setter TargetName="THB"
                      Property="Fill"
                      Value="{DynamicResource DefaultScrollThumb_Background_P}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsDragging"
                           Value="false" />
                <Condition Property="IsMouseOver"
                           Value="true" />
              </MultiTrigger.Conditions>
              <Setter TargetName="THB"
                      Property="Cursor"
                      Value="Hand" />
              <Setter TargetName="THB"
                      Property="Fill"
                      Value="{DynamicResource DefaultScrollThumb_Background_R}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="SC_PageButton"
         TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle"
            Value="True" />
    <Setter Property="IsTabStop"
            Value="False" />
    <Setter Property="Focusable"
            Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle x:Name="REP"
                     Width="{TemplateBinding Width}"
                     Height="{TemplateBinding Height}"
                     Fill="#222222" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="SC_Scrollbar"
         TargetType="{x:Type ScrollBar}">
    <Setter Property="HorizontalAlignment"
            Value="Right" />
    <Setter Property="OverridesDefaultStyle"
            Value="True" />
    <Setter Property="Width"
            Value="2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid SnapsToDevicePixels="True">
            <Track x:Name="PART_Track"
                   HorizontalAlignment="Center"
                   Margin="0"
                   Width="{TemplateBinding Width}"
                   Maximum="{TemplateBinding Maximum}"
                   Minimum="{TemplateBinding Minimum}"
                   Value="{TemplateBinding Value}"
                   IsDirectionReversed="true">
              <Track.DecreaseRepeatButton>
                <RepeatButton x:Name="VeticalLargeDecrease"
                              Style="{StaticResource SC_PageButton}"
                              Command="{x:Static ScrollBar.PageUpCommand}"
                              IsTabStop="False"
                              Interval="50" />
              </Track.DecreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource SC_Thumb}" />
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton x:Name="VeticalLargeIncrease"
                              Style="{StaticResource SC_PageButton}"
                              Command="{x:Static ScrollBar.PageDownCommand}"
                              IsTabStop="False"
                              Interval="50" />
              </Track.IncreaseRepeatButton>
            </Track>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="SC_ScrollViewer"
         TargetType="{x:Type ScrollViewer}">
    <Setter Property="BorderThickness"
            Value="0" />
    <Setter Property="VerticalContentAlignment"
            Value="Top" />
    <Setter Property="VerticalScrollBarVisibility"
            Value="Visible" />
    <Setter Property="HorizontalContentAlignment"
            Value="Center" />
    <Setter Property="HorizontalScrollBarVisibility"
            Value="Visible" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Background}"
                Width="{TemplateBinding MaxWidth}" >
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition x:Name="SBG" 
                                Width="8" />
            </Grid.ColumnDefinitions>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
            <Grid Grid.Column="1"
                  Background="{TemplateBinding Background}">
              <ScrollBar x:Name="PART_VerticalScrollBar"
                         AutomationProperties.AutomationId="VerticalScrollBar"
                         Orientation="Vertical"
                         Maximum="{TemplateBinding ScrollableHeight}"
                         Minimum="0"
                         Opacity="0"
                         Style="{StaticResource SC_Scrollbar}"
                         ViewportSize="{TemplateBinding ViewportHeight}"
                         Value="{TemplateBinding VerticalOffset}"
                         Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
              <Grid.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                  <BeginStoryboard>
                    <Storyboard FillBehavior="HoldEnd">
                      <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                       Storyboard.TargetProperty="Width"
                                       To="8"
                                       Duration="0:0:0.2" />
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                       Storyboard.TargetProperty="Width"
                                       To="2"
                                       BeginTime="0:0:3"
                                       Duration="0:0:0.2" />
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger>
              </Grid.Triggers>
            </Grid>
            <Grid.Triggers>
              <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                  <Storyboard FillBehavior="HoldEnd">
                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0:0:0.5" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger>
              <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                  <Storyboard FillBehavior="HoldEnd">
                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0"
                                     Duration="0:0:0.5" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger>
            </Grid.Triggers>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!--Frame-->
  <Style x:Key="DefaultFrame"
         TargetType="{x:Type Frame}">
    <Setter Property="Margin"
            Value="0,24,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Frame}">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  Padding="{TemplateBinding Padding}">
            <ContentPresenter x:Name="PART_FrameCP" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>