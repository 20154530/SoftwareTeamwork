<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:SoftwareTeamwork">

    <!--Thickness-->
    <sys:Double x:Key="NotifyContextmenuTextSize">13</sys:Double>
    <sys:Double x:Key="NotifyContextmenuIconSize">14</sys:Double>
    <sys:Double x:Key="NotifyContextmenuItemHeight">26</sys:Double>
    
    <!--ContentMenuSeperator-->
    <Style x:Key="SeparatorStyle1" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="0,2,0,2"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="1" SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--IconTextBlock-->
    <Style x:Key="IconTextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource Segoe}"/>
        <Setter Property="Foreground" Value="{DynamicResource NotifyTextColor_L1_N}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--NumberTextBlock-->
    <Style x:Key="NumberTextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource Number}"/>
        <Setter Property="FontWeight" Value="ExtraBold"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="FontSize" Value="10.8"/>
        <Setter Property="Foreground" Value="{DynamicResource NotifyTextColor_L1_N}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!--IconButton-->
    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="#444444"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" SnapsToDevicePixels="True">
                        <TextBlock x:Name="ContentIcon" Text="{TemplateBinding Content}" Style="{StaticResource IconTextBlock}" Foreground="{TemplateBinding Foreground}"  FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Margin="2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentIcon" Property="Foreground" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentIcon" Property="Foreground" Value="{Binding Background,RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DialogStyle-->
    
    <!--ExitDialog-->
    <Style TargetType="{x:Type local:DialogBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DialogBase}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="ContentLayer">

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>